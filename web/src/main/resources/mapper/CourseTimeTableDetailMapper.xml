<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hackerda.platform.mapper.CourseTimeTableDetailMapper" >
  <resultMap id="BaseResultMap" type="com.hackerda.platform.pojo.CourseTimeTableDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="room_name" property="roomName" jdbcType="VARCHAR" />
    <result column="course_time_table_basic_info_id" property="courseTimeTableBasicInfoId" jdbcType="INTEGER" />
    <result column="campus_name" property="campusName" jdbcType="VARCHAR" />
    <result column="continuing_session" property="continuingSession" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="attend_class_teacher" property="attendClassTeacher" jdbcType="VARCHAR" />
    <result column="day_" property="day" jdbcType="INTEGER" />
    <result column="order_" property="order" jdbcType="INTEGER" />
    <result column="start_week" property="startWeek" jdbcType="INTEGER" />
    <result column="end_week" property="endWeek" jdbcType="INTEGER" />
    <result column="week_" property="week" jdbcType="VARCHAR" />
    <result column="course_sequence_number" property="courseSequenceNumber" jdbcType="VARCHAR" />
    <result column="week_description" property="weekDescription" jdbcType="VARCHAR" />
    <result column="sksj" property="sksj" jdbcType="VARCHAR" />
    <result column="distinct_" property="distinct" jdbcType="TINYINT" />
    <result column="term_year" property="termYear" jdbcType="CHAR" />
    <result column="term_order" property="termOrder" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="relativeMap" type="com.hackerda.platform.pojo.StudentCourseTable" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="course_time_table_id" property="courseTimeTableId" jdbcType="INTEGER" />
    <result column="term_year" property="termYear" jdbcType="CHAR" />
    <result column="term_order" property="termOrder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, room_name, course_time_table_basic_info_id, campus_name, continuing_session,
    course_id, attend_class_teacher, day_, order_, start_week, end_week, week_, course_sequence_number,
    week_description, sksj, distinct_, term_year, term_order, gmt_create
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hackerda.platform.pojo.example.CourseTimeTableDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_time_table_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from course_time_table_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_time_table_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hackerda.platform.pojo.example.CourseTimeTableDetailExample" >
    delete from course_time_table_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hackerda.platform.pojo.CourseTimeTableDetail" >
    <selectKey order="AFTER" keyProperty="id" resultType="int">
      select LAST_INSERT_ID()
    </selectKey>
    insert into course_time_table_detail (id, room_name, course_time_table_basic_info_id,
    campus_name, continuing_session, course_id,
    attend_class_teacher, day_, order_,
    start_week, end_week, week_,
    course_sequence_number, week_description,
    sksj, distinct_, term_year,
    term_order, gmt_create)
    values (#{id,jdbcType=INTEGER}, #{roomName,jdbcType=VARCHAR}, #{courseTimeTableBasicInfoId,jdbcType=INTEGER},
    #{campusName,jdbcType=VARCHAR}, #{continuingSession,jdbcType=INTEGER}, #{courseId,jdbcType=VARCHAR},
    #{attendClassTeacher,jdbcType=VARCHAR}, #{day,jdbcType=INTEGER}, #{order,jdbcType=INTEGER},
    #{startWeek,jdbcType=INTEGER}, #{endWeek,jdbcType=INTEGER}, #{week,jdbcType=VARCHAR},
    #{courseSequenceNumber,jdbcType=VARCHAR}, #{weekDescription,jdbcType=VARCHAR},
    #{sksj,jdbcType=VARCHAR}, #{distinct,jdbcType=TINYINT}, #{termYear,jdbcType=CHAR},
    #{termOrder,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hackerda.platform.pojo.CourseTimeTableDetail" >
    <selectKey order="AFTER" keyProperty="id" resultType="int">
      select LAST_INSERT_ID()
    </selectKey>
    insert into course_time_table_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roomName != null" >
        room_name,
      </if>
      <if test="courseTimeTableBasicInfoId != null" >
        course_time_table_basic_info_id,
      </if>
      <if test="campusName != null" >
        campus_name,
      </if>
      <if test="continuingSession != null" >
        continuing_session,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="attendClassTeacher != null" >
        attend_class_teacher,
      </if>
      <if test="day != null" >
        day_,
      </if>
      <if test="order != null" >
        order_,
      </if>
      <if test="startWeek != null" >
        start_week,
      </if>
      <if test="endWeek != null" >
        end_week,
      </if>
      <if test="week != null" >
        week_,
      </if>
      <if test="courseSequenceNumber != null" >
        course_sequence_number,
      </if>
      <if test="weekDescription != null" >
        week_description,
      </if>
      <if test="sksj != null" >
        sksj,
      </if>
      <if test="distinct != null" >
        distinct_,
      </if>
      <if test="termYear != null" >
        term_year,
      </if>
      <if test="termOrder != null" >
        term_order,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomName != null" >
        #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="courseTimeTableBasicInfoId != null" >
        #{courseTimeTableBasicInfoId,jdbcType=INTEGER},
      </if>
      <if test="campusName != null" >
        #{campusName,jdbcType=VARCHAR},
      </if>
      <if test="continuingSession != null" >
        #{continuingSession,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="attendClassTeacher != null" >
        #{attendClassTeacher,jdbcType=VARCHAR},
      </if>
      <if test="day != null" >
        #{day,jdbcType=INTEGER},
      </if>
      <if test="order != null" >
        #{order,jdbcType=INTEGER},
      </if>
      <if test="startWeek != null" >
        #{startWeek,jdbcType=INTEGER},
      </if>
      <if test="endWeek != null" >
        #{endWeek,jdbcType=INTEGER},
      </if>
      <if test="week != null" >
        #{week,jdbcType=VARCHAR},
      </if>
      <if test="courseSequenceNumber != null" >
        #{courseSequenceNumber,jdbcType=VARCHAR},
      </if>
      <if test="weekDescription != null" >
        #{weekDescription,jdbcType=VARCHAR},
      </if>
      <if test="sksj != null" >
        #{sksj,jdbcType=VARCHAR},
      </if>
      <if test="distinct != null" >
        #{distinct,jdbcType=TINYINT},
      </if>
      <if test="termYear != null" >
        #{termYear,jdbcType=CHAR},
      </if>
      <if test="termOrder != null" >
        #{termOrder,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hackerda.platform.pojo.example.CourseTimeTableDetailExample" resultType="java.lang.Integer" >
    select count(*) from course_time_table_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_time_table_detail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roomName != null" >
        room_name = #{record.roomName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTimeTableBasicInfoId != null" >
        course_time_table_basic_info_id = #{record.courseTimeTableBasicInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.campusName != null" >
        campus_name = #{record.campusName,jdbcType=VARCHAR},
      </if>
      <if test="record.continuingSession != null" >
        continuing_session = #{record.continuingSession,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.attendClassTeacher != null" >
        attend_class_teacher = #{record.attendClassTeacher,jdbcType=VARCHAR},
      </if>
      <if test="record.day != null" >
        day_ = #{record.day,jdbcType=INTEGER},
      </if>
      <if test="record.order != null" >
        order_ = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.startWeek != null" >
        start_week = #{record.startWeek,jdbcType=INTEGER},
      </if>
      <if test="record.endWeek != null" >
        end_week = #{record.endWeek,jdbcType=INTEGER},
      </if>
      <if test="record.week != null" >
        week_ = #{record.week,jdbcType=VARCHAR},
      </if>
      <if test="record.courseSequenceNumber != null" >
        course_sequence_number = #{record.courseSequenceNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.weekDescription != null" >
        week_description = #{record.weekDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.sksj != null" >
        sksj = #{record.sksj,jdbcType=VARCHAR},
      </if>
      <if test="record.distinct != null" >
        distinct_ = #{record.distinct,jdbcType=TINYINT},
      </if>
      <if test="record.termYear != null" >
        term_year = #{record.termYear,jdbcType=CHAR},
      </if>
      <if test="record.termOrder != null" >
        term_order = #{record.termOrder,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_time_table_detail
    set id = #{record.id,jdbcType=INTEGER},
    room_name = #{record.roomName,jdbcType=VARCHAR},
    course_time_table_basic_info_id = #{record.courseTimeTableBasicInfoId,jdbcType=INTEGER},
    campus_name = #{record.campusName,jdbcType=VARCHAR},
    continuing_session = #{record.continuingSession,jdbcType=INTEGER},
    course_id = #{record.courseId,jdbcType=VARCHAR},
    attend_class_teacher = #{record.attendClassTeacher,jdbcType=VARCHAR},
    day_ = #{record.day,jdbcType=INTEGER},
    order_ = #{record.order,jdbcType=INTEGER},
    start_week = #{record.startWeek,jdbcType=INTEGER},
    end_week = #{record.endWeek,jdbcType=INTEGER},
    week_ = #{record.week,jdbcType=VARCHAR},
    course_sequence_number = #{record.courseSequenceNumber,jdbcType=VARCHAR},
    week_description = #{record.weekDescription,jdbcType=VARCHAR},
    sksj = #{record.sksj,jdbcType=VARCHAR},
    distinct_ = #{record.distinct,jdbcType=TINYINT},
    term_year = #{record.termYear,jdbcType=CHAR},
    term_order = #{record.termOrder,jdbcType=INTEGER},
    gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hackerda.platform.pojo.CourseTimeTableDetail" >
    update course_time_table_detail
    <set >
      <if test="roomName != null" >
        room_name = #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="courseTimeTableBasicInfoId != null" >
        course_time_table_basic_info_id = #{courseTimeTableBasicInfoId,jdbcType=INTEGER},
      </if>
      <if test="campusName != null" >
        campus_name = #{campusName,jdbcType=VARCHAR},
      </if>
      <if test="continuingSession != null" >
        continuing_session = #{continuingSession,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="attendClassTeacher != null" >
        attend_class_teacher = #{attendClassTeacher,jdbcType=VARCHAR},
      </if>
      <if test="day != null" >
        day_ = #{day,jdbcType=INTEGER},
      </if>
      <if test="order != null" >
        order_ = #{order,jdbcType=INTEGER},
      </if>
      <if test="startWeek != null" >
        start_week = #{startWeek,jdbcType=INTEGER},
      </if>
      <if test="endWeek != null" >
        end_week = #{endWeek,jdbcType=INTEGER},
      </if>
      <if test="week != null" >
        week_ = #{week,jdbcType=VARCHAR},
      </if>
      <if test="courseSequenceNumber != null" >
        course_sequence_number = #{courseSequenceNumber,jdbcType=VARCHAR},
      </if>
      <if test="weekDescription != null" >
        week_description = #{weekDescription,jdbcType=VARCHAR},
      </if>
      <if test="sksj != null" >
        sksj = #{sksj,jdbcType=VARCHAR},
      </if>
      <if test="distinct != null" >
        distinct_ = #{distinct,jdbcType=TINYINT},
      </if>
      <if test="termYear != null" >
        term_year = #{termYear,jdbcType=CHAR},
      </if>
      <if test="termOrder != null" >
        term_order = #{termOrder,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hackerda.platform.pojo.CourseTimeTableDetail" >
    update course_time_table_detail
    set room_name = #{roomName,jdbcType=VARCHAR},
      course_time_table_basic_info_id = #{courseTimeTableBasicInfoId,jdbcType=INTEGER},
      campus_name = #{campusName,jdbcType=VARCHAR},
      continuing_session = #{continuingSession,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=VARCHAR},
      attend_class_teacher = #{attendClassTeacher,jdbcType=VARCHAR},
      day_ = #{day,jdbcType=INTEGER},
      order_ = #{order,jdbcType=INTEGER},
      start_week = #{startWeek,jdbcType=INTEGER},
      end_week = #{endWeek,jdbcType=INTEGER},
      week_ = #{week,jdbcType=VARCHAR},
      course_sequence_number = #{courseSequenceNumber,jdbcType=VARCHAR},
      week_description = #{weekDescription,jdbcType=VARCHAR},
      sksj = #{sksj,jdbcType=VARCHAR},
      distinct_ = #{distinct,jdbcType=TINYINT},
      term_year = #{termYear,jdbcType=CHAR},
      term_order = #{termOrder,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getCourseTimeTableDetailIdsByClassId" parameterType="int" resultType="int">
    select course_time_table_id from class_course_time_table where classes_id = #{classesId}
  </select>
  <insert id="insertClassesCourseTimeTableBatch">
    insert into class_course_time_table(classes_id, course_time_table_id) values
    <foreach collection="ids" separator="," item="id">
      (#{classesId}, #{id})
    </foreach>
  </insert>

  <insert id="insertStudentCourseTimeTableBatch">
    insert into student_course_timetable(account, course_time_table_id, term_year, term_order) values
    <foreach collection="courseTimeTableIdList" separator="," item="id">
      (#{account}, #{id}, #{termYear}, #{termOrder})
    </foreach>
  </insert>

  <select id="selectStudentCourseTimeTableRelative" resultMap="relativeMap"
          parameterType="com.hackerda.platform.pojo.StudentCourseTable">
    select id, course_time_table_id, account, term_year, term_order from student_course_timetable
    <where>
      <if test="id != null">
        id = #{id}
      </if>
      <if test="account != null">
        and account = #{account}
      </if>
      <if test="courseTimeTableId != null">
        and course_time_table_id = #{courseTimeTableId}
      </if>
      <if test="termYear != null">
        and term_year = #{termYear}
      </if>
      <if test="termOrder != null">
        and term_order = #{termOrder}
      </if>
    </where>
  </select>
</mapper>