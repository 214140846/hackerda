<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hackerda.platform.infrastructure.database.mapper.ext.UserExtMapper">


    <resultMap id="StudentPosterDOMap" type="com.hackerda.platform.infrastructure.database.model.StudentPosterDO">
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="avatar_path" jdbcType="VARCHAR" property="avatarUrl" />
        <result column="gender" jdbcType="INTEGER" property="gender" />
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="urpclass_num" property="urpClassNum" jdbcType="INTEGER"/>
        <result column="academy_name" property="academyName" jdbcType="VARCHAR"/>
        <result column="subject_name" property="subjectName" jdbcType="VARCHAR"/>
        <result column="class_name" property="className" jdbcType="VARCHAR"/>
    </resultMap>


    <insert id="insertStudentRelative" parameterType="java.util.List">
        insert into user_student (user_name, student_account)
        values (#{userName}, #{studentAccount})
    </insert>
    <update id="updateRelativeUserNameByStudentAccount">
        update user_student SET user_name = #{userName} where student_account = #{studentAccount}
    </update>

    <select id="selectByStudentAccount"
            resultMap="com.hackerda.platform.infrastructure.database.mapper.UserMapper.BaseResultMap">
        select u.*
        from user u
                 join user_student us on u.user_name = us.user_name

        where us.student_account = #{studentAccount}
    </select>
    <select id="selectByStudentPoster" resultMap="StudentPosterDOMap">
        select u.avatar_path, u.user_name, u.nick_name , u.gender,  st.account, st.name, st.sex, st.urpclass_num,
               st.urpclass_num,
        st.academy_name , st.subject_name, st.class_name
        from user u
                 join user_student us on u.user_name = us.user_name
                 join student st on us.student_account = st.account

        where us.student_account = #{studentAccount}
    </select>

    <select id="selectStudentPosterByUserName" resultMap="StudentPosterDOMap">
        select u.avatar_path, u.user_name, u.nick_name , u.gender,  st.account, st.name, st.sex, st.urpclass_num,
               st.urpclass_num,
               st.academy_name , st.subject_name, st.class_name
        from user u
                 join user_student us on u.user_name = us.user_name
                 join student st on us.student_account = st.account

        where us.user_name = #{userName}
    </select>
    <select id="selectRelativeUserNameByStudentAccount" resultType="java.lang.String">
        select user_name from user_student where student_account = #{studentAccount}
    </select>
    <select id="selectRelativeStudentAccountByUserName" resultType="java.lang.String">
        select student_account from user_student where user_name = #{userName}
    </select>
</mapper>