<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hackerda.platform.infrastructure.database.mapper.ext.StudentUserExtMapper">

    <resultMap id="WechatStudentUserMap" type="com.hackerda.platform.infrastructure.database.model.WechatStudentUserDO">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="account" property="account" jdbcType="INTEGER" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="VARCHAR" />
        <result column="ethnic" property="ethnic" jdbcType="VARCHAR" />
        <result column="urpclass_num" property="urpClassNum" jdbcType="INTEGER" />
        <result column="is_correct" property="isCorrect" jdbcType="BIT" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
        <result column="academy_name" property="academyName" jdbcType="VARCHAR" />
        <result column="subject_name" property="subjectName" jdbcType="VARCHAR" />
        <result column="class_name" property="className" jdbcType="VARCHAR" />
        <result column="openid" property="openId" jdbcType="VARCHAR" />
        <result column="appid" property="appId" jdbcType="VARCHAR" />
        <result column="is_bind" property="isBind" jdbcType="BIT" />
        <result column="is_subscribe" property="isSubscribe" jdbcType="TINYINT" />
        <result column="scene" property="scene" jdbcType="INTEGER" />
    </resultMap>
    <insert id="insertUnionIdRelative">
        insert into student_unionid (account, union_id) values (#{param1}, #{param2})
    </insert>
    <update id="updateUnionIdRelative">
        update student_unionid set account = #{account} where union_id = #{unionId}
    </update>
    <delete id="deleteUnionIdRelative">
        delete from student_unionid where account = #{account}
    </delete>

    <select id="selectRoleByAccount"  resultMap="com.hackerda.platform.infrastructure.database.mapper.RoleMapper.BaseResultMap">
        select r.id, r.name, r.code
        from student_role sr
                 join role r on sr.role_id = r.id
        where sr.account = #{account}
    </select>
    <select id="selectAccountByUnionId" resultType="java.lang.Integer">
        select account from student_unionid where union_id = #{unionId}
    </select>
</mapper>