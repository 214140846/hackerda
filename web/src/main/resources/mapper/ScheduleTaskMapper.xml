<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hackerda.platform.infrastructure.database.mapper.ScheduleTaskMapper" >
  <resultMap id="BaseResultMap" type="com.hackerda.platform.infrastructure.database.model.ScheduleTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="task_count" property="taskCount" jdbcType="INTEGER" />
    <result column="appid" property="appid" jdbcType="VARCHAR" />
    <result column="send_status" property="sendStatus" jdbcType="TINYINT" />
    <result column="is_subscribe" property="isSubscribe" jdbcType="TINYINT" />
    <result column="scene" property="scene" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, openid, task_count, appid, send_status, is_subscribe, scene, gmt_create, gmt_modify
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hackerda.platform.infrastructure.database.model.example.ScheduleTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from schedule_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schedule_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hackerda.platform.infrastructure.database.model.example.ScheduleTaskExample" >
    delete from schedule_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hackerda.platform.infrastructure.database.model.ScheduleTask" >
    insert into schedule_task (id, openid, task_count, 
      appid, send_status, is_subscribe, 
      scene, gmt_create, gmt_modify
      )
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{taskCount,jdbcType=INTEGER}, 
      #{appid,jdbcType=VARCHAR}, #{sendStatus,jdbcType=TINYINT}, #{isSubscribe,jdbcType=TINYINT}, 
      #{scene,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hackerda.platform.infrastructure.database.model.ScheduleTask" >
    insert into schedule_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="taskCount != null" >
        task_count,
      </if>
      <if test="appid != null" >
        appid,
      </if>
      <if test="sendStatus != null" >
        send_status,
      </if>
      <if test="isSubscribe != null" >
        is_subscribe,
      </if>
      <if test="scene != null" >
        scene,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="taskCount != null" >
        #{taskCount,jdbcType=INTEGER},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="sendStatus != null" >
        #{sendStatus,jdbcType=TINYINT},
      </if>
      <if test="isSubscribe != null" >
        #{isSubscribe,jdbcType=TINYINT},
      </if>
      <if test="scene != null" >
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hackerda.platform.infrastructure.database.model.example.ScheduleTaskExample" resultType="java.lang.Integer" >
    select count(*) from schedule_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update schedule_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.taskCount != null" >
        task_count = #{record.taskCount,jdbcType=INTEGER},
      </if>
      <if test="record.appid != null" >
        appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.sendStatus != null" >
        send_status = #{record.sendStatus,jdbcType=TINYINT},
      </if>
      <if test="record.isSubscribe != null" >
        is_subscribe = #{record.isSubscribe,jdbcType=TINYINT},
      </if>
      <if test="record.scene != null" >
        scene = #{record.scene,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null" >
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update schedule_task
    set id = #{record.id,jdbcType=INTEGER},
      openid = #{record.openid,jdbcType=VARCHAR},
      task_count = #{record.taskCount,jdbcType=INTEGER},
      appid = #{record.appid,jdbcType=VARCHAR},
      send_status = #{record.sendStatus,jdbcType=TINYINT},
      is_subscribe = #{record.isSubscribe,jdbcType=TINYINT},
      scene = #{record.scene,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hackerda.platform.infrastructure.database.model.ScheduleTask" >
    update schedule_task
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="taskCount != null" >
        task_count = #{taskCount,jdbcType=INTEGER},
      </if>
      <if test="appid != null" >
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="sendStatus != null" >
        send_status = #{sendStatus,jdbcType=TINYINT},
      </if>
      <if test="isSubscribe != null" >
        is_subscribe = #{isSubscribe,jdbcType=TINYINT},
      </if>
      <if test="scene != null" >
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hackerda.platform.infrastructure.database.model.ScheduleTask" >
    update schedule_task
    set openid = #{openid,jdbcType=VARCHAR},
      task_count = #{taskCount,jdbcType=INTEGER},
      appid = #{appid,jdbcType=VARCHAR},
      send_status = #{sendStatus,jdbcType=TINYINT},
      is_subscribe = #{isSubscribe,jdbcType=TINYINT},
      scene = #{scene,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="isExistSubscribeRecord" parameterType="com.hackerda.platform.infrastructure.database.model.ScheduleTask" resultType="boolean">
    select exists(
    select
    <include refid="Base_Column_List"/>
    from schedule_task where appid = #{appid} and scene = #{scene} and openid = #{openid})
  </select>
</mapper>