<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hackerda.platform.infrastructure.database.mapper.UserLogoutRecordMapper">
  <resultMap id="BaseResultMap" type="com.hackerda.platform.infrastructure.database.model.UserLogoutRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="logout_record_id" jdbcType="BIGINT" property="logoutRecordId" />
    <result column="logout_type" jdbcType="INTEGER" property="logoutType" />
    <result column="logout_reason" jdbcType="VARCHAR" property="logoutReason" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, logout_record_id, logout_type, logout_reason, `operator`, gmt_create, gmt_modify
  </sql>
  <select id="selectByExample" parameterType="com.hackerda.platform.infrastructure.database.model.UserLogoutRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_logout_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_logout_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_logout_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hackerda.platform.infrastructure.database.model.UserLogoutRecordExample">
    delete from user_logout_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hackerda.platform.infrastructure.database.model.UserLogoutRecord" useGeneratedKeys="true">
    insert into user_logout_record (logout_record_id, logout_type, logout_reason, 
      `operator`, gmt_create, gmt_modify
      )
    values (#{logoutRecordId,jdbcType=BIGINT}, #{logoutType,jdbcType=INTEGER}, #{logoutReason,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hackerda.platform.infrastructure.database.model.UserLogoutRecord" useGeneratedKeys="true">
    insert into user_logout_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logoutRecordId != null">
        logout_record_id,
      </if>
      <if test="logoutType != null">
        logout_type,
      </if>
      <if test="logoutReason != null">
        logout_reason,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logoutRecordId != null">
        #{logoutRecordId,jdbcType=BIGINT},
      </if>
      <if test="logoutType != null">
        #{logoutType,jdbcType=INTEGER},
      </if>
      <if test="logoutReason != null">
        #{logoutReason,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hackerda.platform.infrastructure.database.model.UserLogoutRecordExample" resultType="java.lang.Long">
    select count(*) from user_logout_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_logout_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.logoutRecordId != null">
        logout_record_id = #{record.logoutRecordId,jdbcType=BIGINT},
      </if>
      <if test="record.logoutType != null">
        logout_type = #{record.logoutType,jdbcType=INTEGER},
      </if>
      <if test="record.logoutReason != null">
        logout_reason = #{record.logoutReason,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        `operator` = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_logout_record
    set id = #{record.id,jdbcType=BIGINT},
      logout_record_id = #{record.logoutRecordId,jdbcType=BIGINT},
      logout_type = #{record.logoutType,jdbcType=INTEGER},
      logout_reason = #{record.logoutReason,jdbcType=VARCHAR},
      `operator` = #{record.operator,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hackerda.platform.infrastructure.database.model.UserLogoutRecord">
    update user_logout_record
    <set>
      <if test="logoutRecordId != null">
        logout_record_id = #{logoutRecordId,jdbcType=BIGINT},
      </if>
      <if test="logoutType != null">
        logout_type = #{logoutType,jdbcType=INTEGER},
      </if>
      <if test="logoutReason != null">
        logout_reason = #{logoutReason,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hackerda.platform.infrastructure.database.model.UserLogoutRecord">
    update user_logout_record
    set logout_record_id = #{logoutRecordId,jdbcType=BIGINT},
      logout_type = #{logoutType,jdbcType=INTEGER},
      logout_reason = #{logoutReason,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>