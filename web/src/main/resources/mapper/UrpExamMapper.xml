<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hackerda.platform.infrastructure.database.mapper.UrpExamMapper" >
  <resultMap id="BaseResultMap" type="com.hackerda.platform.infrastructure.database.model.UrpExam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="plan_id" property="planId" jdbcType="INTEGER" />
    <result column="average_score" property="averageScore" jdbcType="DOUBLE" />
    <result column="class_number" property="classNumber" jdbcType="VARCHAR" />
    <result column="course_sequence_number" property="courseSequenceNumber" jdbcType="VARCHAR" />
    <result column="course_property_code" property="coursePropertyCode" jdbcType="VARCHAR" />
    <result column="course_property_name" property="coursePropertyName" jdbcType="VARCHAR" />
    <result column="examtime" property="examtime" jdbcType="VARCHAR" />
    <result column="executive_education_plan_number" property="executiveEducationPlanNumber" jdbcType="VARCHAR" />
    <result column="max_score" property="maxScore" jdbcType="DOUBLE" />
    <result column="min_score" property="minScore" jdbcType="DOUBLE" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="operatetime" property="operatetime" jdbcType="VARCHAR" />
    <result column="persent_level_point" property="persentLevelPoint" jdbcType="VARCHAR" />
    <result column="term_code" property="termCode" jdbcType="VARCHAR" />
    <result column="term_name" property="termName" jdbcType="VARCHAR" />
    <result column="academy" property="academy" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, course_id, major_id, class_id, plan_id, average_score, class_number, course_sequence_number,
    course_property_code, course_property_name, examtime, executive_education_plan_number,
    max_score, min_score, operator, operatetime, persent_level_point, term_code, term_name,
    academy, gmt_create
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hackerda.platform.infrastructure.database.model.example.UrpExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from urp_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from urp_exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from urp_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hackerda.platform.infrastructure.database.model.example.UrpExamExample" >
    delete from urp_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hackerda.platform.infrastructure.database.model.UrpExam" >
    insert into urp_exam (id, course_id, major_id,
    class_id, plan_id, average_score,
    class_number, course_sequence_number, course_property_code,
    course_property_name, examtime, executive_education_plan_number,
    max_score, min_score, operator,
    operatetime, persent_level_point, term_code,
    term_name, academy, gmt_create
    )
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=VARCHAR}, #{majorId,jdbcType=INTEGER},
    #{classId,jdbcType=INTEGER}, #{planId,jdbcType=INTEGER}, #{averageScore,jdbcType=DOUBLE},
    #{classNumber,jdbcType=VARCHAR}, #{courseSequenceNumber,jdbcType=VARCHAR}, #{coursePropertyCode,jdbcType=VARCHAR},
    #{coursePropertyName,jdbcType=VARCHAR}, #{examtime,jdbcType=VARCHAR}, #{executiveEducationPlanNumber,jdbcType=VARCHAR},
    #{maxScore,jdbcType=DOUBLE}, #{minScore,jdbcType=DOUBLE}, #{operator,jdbcType=VARCHAR},
    #{operatetime,jdbcType=VARCHAR}, #{persentLevelPoint,jdbcType=VARCHAR}, #{termCode,jdbcType=VARCHAR},
    #{termName,jdbcType=VARCHAR}, #{academy,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.hackerda.platform.infrastructure.database.model.UrpExam" >
      <selectKey order="AFTER" keyProperty="id" resultType="int">
          select LAST_INSERT_ID();
      </selectKey>
    insert into urp_exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="planId != null" >
        plan_id,
      </if>
      <if test="averageScore != null" >
        average_score,
      </if>
      <if test="classNumber != null" >
        class_number,
      </if>
      <if test="courseSequenceNumber != null" >
        course_sequence_number,
      </if>
      <if test="coursePropertyCode != null" >
        course_property_code,
      </if>
      <if test="coursePropertyName != null" >
        course_property_name,
      </if>
      <if test="examtime != null" >
        examtime,
      </if>
      <if test="executiveEducationPlanNumber != null" >
        executive_education_plan_number,
      </if>
      <if test="maxScore != null" >
        max_score,
      </if>
      <if test="minScore != null" >
        min_score,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operatetime != null" >
        operatetime,
      </if>
      <if test="persentLevelPoint != null" >
        persent_level_point,
      </if>
      <if test="termCode != null" >
        term_code,
      </if>
      <if test="termName != null" >
        term_name,
      </if>
      <if test="academy != null" >
        academy,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="planId != null" >
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="averageScore != null" >
        #{averageScore,jdbcType=DOUBLE},
      </if>
      <if test="classNumber != null" >
        #{classNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseSequenceNumber != null" >
        #{courseSequenceNumber,jdbcType=VARCHAR},
      </if>
      <if test="coursePropertyCode != null" >
        #{coursePropertyCode,jdbcType=VARCHAR},
      </if>
      <if test="coursePropertyName != null" >
        #{coursePropertyName,jdbcType=VARCHAR},
      </if>
      <if test="examtime != null" >
        #{examtime,jdbcType=VARCHAR},
      </if>
      <if test="executiveEducationPlanNumber != null" >
        #{executiveEducationPlanNumber,jdbcType=VARCHAR},
      </if>
      <if test="maxScore != null" >
        #{maxScore,jdbcType=DOUBLE},
      </if>
      <if test="minScore != null" >
        #{minScore,jdbcType=DOUBLE},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatetime != null" >
        #{operatetime,jdbcType=VARCHAR},
      </if>
      <if test="persentLevelPoint != null" >
        #{persentLevelPoint,jdbcType=VARCHAR},
      </if>
      <if test="termCode != null" >
        #{termCode,jdbcType=VARCHAR},
      </if>
      <if test="termName != null" >
        #{termName,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        #{academy,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hackerda.platform.infrastructure.database.model.example.UrpExamExample" resultType="java.lang.Integer" >
    select count(*) from urp_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update urp_exam
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.majorId != null" >
        major_id = #{record.majorId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.planId != null" >
        plan_id = #{record.planId,jdbcType=INTEGER},
      </if>
      <if test="record.averageScore != null" >
        average_score = #{record.averageScore,jdbcType=DOUBLE},
      </if>
      <if test="record.classNumber != null" >
        class_number = #{record.classNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.courseSequenceNumber != null" >
        course_sequence_number = #{record.courseSequenceNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.coursePropertyCode != null" >
        course_property_code = #{record.coursePropertyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.coursePropertyName != null" >
        course_property_name = #{record.coursePropertyName,jdbcType=VARCHAR},
      </if>
      <if test="record.examtime != null" >
        examtime = #{record.examtime,jdbcType=VARCHAR},
      </if>
      <if test="record.executiveEducationPlanNumber != null" >
        executive_education_plan_number = #{record.executiveEducationPlanNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.maxScore != null" >
        max_score = #{record.maxScore,jdbcType=DOUBLE},
      </if>
      <if test="record.minScore != null" >
        min_score = #{record.minScore,jdbcType=DOUBLE},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operatetime != null" >
        operatetime = #{record.operatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.persentLevelPoint != null" >
        persent_level_point = #{record.persentLevelPoint,jdbcType=VARCHAR},
      </if>
      <if test="record.termCode != null" >
        term_code = #{record.termCode,jdbcType=VARCHAR},
      </if>
      <if test="record.termName != null" >
        term_name = #{record.termName,jdbcType=VARCHAR},
      </if>
      <if test="record.academy != null" >
        academy = #{record.academy,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update urp_exam
    set id = #{record.id,jdbcType=INTEGER},
    course_id = #{record.courseId,jdbcType=VARCHAR},
    major_id = #{record.majorId,jdbcType=INTEGER},
    class_id = #{record.classId,jdbcType=INTEGER},
    plan_id = #{record.planId,jdbcType=INTEGER},
    average_score = #{record.averageScore,jdbcType=DOUBLE},
    class_number = #{record.classNumber,jdbcType=VARCHAR},
    course_sequence_number = #{record.courseSequenceNumber,jdbcType=VARCHAR},
    course_property_code = #{record.coursePropertyCode,jdbcType=VARCHAR},
    course_property_name = #{record.coursePropertyName,jdbcType=VARCHAR},
    examtime = #{record.examtime,jdbcType=VARCHAR},
    executive_education_plan_number = #{record.executiveEducationPlanNumber,jdbcType=VARCHAR},
    max_score = #{record.maxScore,jdbcType=DOUBLE},
    min_score = #{record.minScore,jdbcType=DOUBLE},
    operator = #{record.operator,jdbcType=VARCHAR},
    operatetime = #{record.operatetime,jdbcType=VARCHAR},
    persent_level_point = #{record.persentLevelPoint,jdbcType=VARCHAR},
    term_code = #{record.termCode,jdbcType=VARCHAR},
    term_name = #{record.termName,jdbcType=VARCHAR},
    academy = #{record.academy,jdbcType=INTEGER},
    gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hackerda.platform.infrastructure.database.model.UrpExam" >
    update urp_exam
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="planId != null" >
        plan_id = #{planId,jdbcType=INTEGER},
      </if>
      <if test="averageScore != null" >
        average_score = #{averageScore,jdbcType=DOUBLE},
      </if>
      <if test="classNumber != null" >
        class_number = #{classNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseSequenceNumber != null" >
        course_sequence_number = #{courseSequenceNumber,jdbcType=VARCHAR},
      </if>
      <if test="coursePropertyCode != null" >
        course_property_code = #{coursePropertyCode,jdbcType=VARCHAR},
      </if>
      <if test="coursePropertyName != null" >
        course_property_name = #{coursePropertyName,jdbcType=VARCHAR},
      </if>
      <if test="examtime != null" >
        examtime = #{examtime,jdbcType=VARCHAR},
      </if>
      <if test="executiveEducationPlanNumber != null" >
        executive_education_plan_number = #{executiveEducationPlanNumber,jdbcType=VARCHAR},
      </if>
      <if test="maxScore != null" >
        max_score = #{maxScore,jdbcType=DOUBLE},
      </if>
      <if test="minScore != null" >
        min_score = #{minScore,jdbcType=DOUBLE},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatetime != null" >
        operatetime = #{operatetime,jdbcType=VARCHAR},
      </if>
      <if test="persentLevelPoint != null" >
        persent_level_point = #{persentLevelPoint,jdbcType=VARCHAR},
      </if>
      <if test="termCode != null" >
        term_code = #{termCode,jdbcType=VARCHAR},
      </if>
      <if test="termName != null" >
        term_name = #{termName,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        academy = #{academy,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hackerda.platform.infrastructure.database.model.UrpExam" >
    update urp_exam
    set course_id = #{courseId,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      plan_id = #{planId,jdbcType=INTEGER},
      average_score = #{averageScore,jdbcType=DOUBLE},
      class_number = #{classNumber,jdbcType=VARCHAR},
      course_sequence_number = #{courseSequenceNumber,jdbcType=VARCHAR},
      course_property_code = #{coursePropertyCode,jdbcType=VARCHAR},
      course_property_name = #{coursePropertyName,jdbcType=VARCHAR},
      examtime = #{examtime,jdbcType=VARCHAR},
      executive_education_plan_number = #{executiveEducationPlanNumber,jdbcType=VARCHAR},
      max_score = #{maxScore,jdbcType=DOUBLE},
      min_score = #{minScore,jdbcType=DOUBLE},
      operator = #{operator,jdbcType=VARCHAR},
      operatetime = #{operatetime,jdbcType=VARCHAR},
      persent_level_point = #{persentLevelPoint,jdbcType=VARCHAR},
      term_code = #{termCode,jdbcType=VARCHAR},
      term_name = #{termName,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getOneClassCurrentTermAllUrpExamId" resultType="int">
    select id from urp_exam where termCode = #{termCode} and termName = #{termName} and class_id = #{classId}
  </select>
</mapper>