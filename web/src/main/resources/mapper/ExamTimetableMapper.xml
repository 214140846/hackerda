<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hackerda.platform.infrastructure.database.mapper.ExamTimetableMapper">
  <resultMap id="BaseResultMap" type="com.hackerda.platform.infrastructure.database.model.example.ExamTimetable">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="room_name" jdbcType="VARCHAR" property="roomName" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="term_order" jdbcType="VARCHAR" property="termOrder" />
    <result column="term_year" jdbcType="VARCHAR" property="termYear" />
    <result column="exam_date" jdbcType="TIMESTAMP" property="examDate" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="day" jdbcType="VARCHAR" property="day" />
    <result column="school_week" jdbcType="VARCHAR" property="schoolWeek" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, room_name, course_name, term_order, term_year, exam_date, start_time, end_time, 
    day, school_week, gmt_create, gmt_modify
  </sql>
  <select id="selectByExample" parameterType="com.hackerda.platform.infrastructure.database.model.example.ExamTimetableExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_timetable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_timetable
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_timetable
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hackerda.platform.infrastructure.database.model.example.ExamTimetableExample">
    delete from exam_timetable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hackerda.platform.infrastructure.database.model.example.ExamTimetable"
  useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into exam_timetable (id, name, room_name, 
      course_name, term_order, term_year, 
      exam_date, start_time, end_time, 
      day, school_week, gmt_create, 
      gmt_modify)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{roomName,jdbcType=VARCHAR}, 
      #{courseName,jdbcType=VARCHAR}, #{termOrder,jdbcType=VARCHAR}, #{termYear,jdbcType=VARCHAR}, 
      #{examDate,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{day,jdbcType=VARCHAR}, #{schoolWeek,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModify,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hackerda.platform.infrastructure.database.model.example.ExamTimetable"
  useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into exam_timetable
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="roomName != null">
        room_name,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="termOrder != null">
        term_order,
      </if>
      <if test="termYear != null">
        term_year,
      </if>
      <if test="examDate != null">
        exam_date,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="schoolWeek != null">
        school_week,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roomName != null">
        #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="termOrder != null">
        #{termOrder,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null">
        #{termYear,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null">
        #{examDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="day != null">
        #{day,jdbcType=VARCHAR},
      </if>
      <if test="schoolWeek != null">
        #{schoolWeek,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hackerda.platform.infrastructure.database.model.example.ExamTimetableExample" resultType="java.lang.Long">
    select count(*) from exam_timetable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_timetable
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.roomName != null">
        room_name = #{record.roomName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.termOrder != null">
        term_order = #{record.termOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.termYear != null">
        term_year = #{record.termYear,jdbcType=VARCHAR},
      </if>
      <if test="record.examDate != null">
        exam_date = #{record.examDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolWeek != null">
        school_week = #{record.schoolWeek,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_timetable
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      room_name = #{record.roomName,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      term_order = #{record.termOrder,jdbcType=VARCHAR},
      term_year = #{record.termYear,jdbcType=VARCHAR},
      exam_date = #{record.examDate,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      day = #{record.day,jdbcType=VARCHAR},
      school_week = #{record.schoolWeek,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hackerda.platform.infrastructure.database.model.example.ExamTimetable">
    update exam_timetable
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roomName != null">
        room_name = #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="termOrder != null">
        term_order = #{termOrder,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null">
        term_year = #{termYear,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null">
        exam_date = #{examDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="day != null">
        day = #{day,jdbcType=VARCHAR},
      </if>
      <if test="schoolWeek != null">
        school_week = #{schoolWeek,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hackerda.platform.infrastructure.database.model.example.ExamTimetable">
    update exam_timetable
    set name = #{name,jdbcType=VARCHAR},
      room_name = #{roomName,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      term_order = #{termOrder,jdbcType=VARCHAR},
      term_year = #{termYear,jdbcType=VARCHAR},
      exam_date = #{examDate,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      day = #{day,jdbcType=VARCHAR},
      school_week = #{schoolWeek,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>