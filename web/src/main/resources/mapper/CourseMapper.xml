<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hackerda.platform.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.hackerda.platform.pojo.Course" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="VARCHAR" />
    <result column="course_order" property="courseOrder" jdbcType="VARCHAR" />
    <result column="term_year" property="termYear" jdbcType="VARCHAR" />
    <result column="term_order" property="termOrder" jdbcType="INTEGER" />
    <result column="teacher_account" property="teacherAccount" jdbcType="VARCHAR" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="exam_type" property="examType" jdbcType="VARCHAR" />
    <result column="exam_type_code" property="examTypeCode" jdbcType="VARCHAR" />
    <result column="academy_name" property="academyName" jdbcType="VARCHAR" />
    <result column="academy_code" property="academyCode" jdbcType="VARCHAR" />
    <result column="course_type" property="courseType" jdbcType="VARCHAR" />
    <result column="course_type_code" property="courseTypeCode" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, num, course_order, term_year, term_order, teacher_account, teacher_name, 
    exam_type, exam_type_code, academy_name, academy_code, course_type, course_type_code, 
    credit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hackerda.platform.pojo.example.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hackerda.platform.pojo.example.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hackerda.platform.pojo.Course" >
    insert into course (id, name, num, 
      course_order, term_year, term_order, 
      teacher_account, teacher_name, exam_type, 
      exam_type_code, academy_name, academy_code, 
      course_type, course_type_code, credit
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR}, 
      #{courseOrder,jdbcType=VARCHAR}, #{termYear,jdbcType=VARCHAR}, #{termOrder,jdbcType=INTEGER}, 
      #{teacherAccount,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, #{examType,jdbcType=VARCHAR}, 
      #{examTypeCode,jdbcType=VARCHAR}, #{academyName,jdbcType=VARCHAR}, #{academyCode,jdbcType=VARCHAR}, 
      #{courseType,jdbcType=VARCHAR}, #{courseTypeCode,jdbcType=VARCHAR}, #{credit,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hackerda.platform.pojo.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="courseOrder != null" >
        course_order,
      </if>
      <if test="termYear != null" >
        term_year,
      </if>
      <if test="termOrder != null" >
        term_order,
      </if>
      <if test="teacherAccount != null" >
        teacher_account,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="examType != null" >
        exam_type,
      </if>
      <if test="examTypeCode != null" >
        exam_type_code,
      </if>
      <if test="academyName != null" >
        academy_name,
      </if>
      <if test="academyCode != null" >
        academy_code,
      </if>
      <if test="courseType != null" >
        course_type,
      </if>
      <if test="courseTypeCode != null" >
        course_type_code,
      </if>
      <if test="credit != null" >
        credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="courseOrder != null" >
        #{courseOrder,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null" >
        #{termYear,jdbcType=VARCHAR},
      </if>
      <if test="termOrder != null" >
        #{termOrder,jdbcType=INTEGER},
      </if>
      <if test="teacherAccount != null" >
        #{teacherAccount,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="examType != null" >
        #{examType,jdbcType=VARCHAR},
      </if>
      <if test="examTypeCode != null" >
        #{examTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="academyName != null" >
        #{academyName,jdbcType=VARCHAR},
      </if>
      <if test="academyCode != null" >
        #{academyCode,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseTypeCode != null" >
        #{courseTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hackerda.platform.pojo.example.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.courseOrder != null" >
        course_order = #{record.courseOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.termYear != null" >
        term_year = #{record.termYear,jdbcType=VARCHAR},
      </if>
      <if test="record.termOrder != null" >
        term_order = #{record.termOrder,jdbcType=INTEGER},
      </if>
      <if test="record.teacherAccount != null" >
        teacher_account = #{record.teacherAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherName != null" >
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.examType != null" >
        exam_type = #{record.examType,jdbcType=VARCHAR},
      </if>
      <if test="record.examTypeCode != null" >
        exam_type_code = #{record.examTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.academyName != null" >
        academy_name = #{record.academyName,jdbcType=VARCHAR},
      </if>
      <if test="record.academyCode != null" >
        academy_code = #{record.academyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.courseType != null" >
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTypeCode != null" >
        course_type_code = #{record.courseTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=VARCHAR},
      course_order = #{record.courseOrder,jdbcType=VARCHAR},
      term_year = #{record.termYear,jdbcType=VARCHAR},
      term_order = #{record.termOrder,jdbcType=INTEGER},
      teacher_account = #{record.teacherAccount,jdbcType=VARCHAR},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      exam_type = #{record.examType,jdbcType=VARCHAR},
      exam_type_code = #{record.examTypeCode,jdbcType=VARCHAR},
      academy_name = #{record.academyName,jdbcType=VARCHAR},
      academy_code = #{record.academyCode,jdbcType=VARCHAR},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      course_type_code = #{record.courseTypeCode,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hackerda.platform.pojo.Course" >
    update course
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="courseOrder != null" >
        course_order = #{courseOrder,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null" >
        term_year = #{termYear,jdbcType=VARCHAR},
      </if>
      <if test="termOrder != null" >
        term_order = #{termOrder,jdbcType=INTEGER},
      </if>
      <if test="teacherAccount != null" >
        teacher_account = #{teacherAccount,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="examType != null" >
        exam_type = #{examType,jdbcType=VARCHAR},
      </if>
      <if test="examTypeCode != null" >
        exam_type_code = #{examTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="academyName != null" >
        academy_name = #{academyName,jdbcType=VARCHAR},
      </if>
      <if test="academyCode != null" >
        academy_code = #{academyCode,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseTypeCode != null" >
        course_type_code = #{courseTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hackerda.platform.pojo.Course" >
    update course
    set name = #{name,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR},
      course_order = #{courseOrder,jdbcType=VARCHAR},
      term_year = #{termYear,jdbcType=VARCHAR},
      term_order = #{termOrder,jdbcType=INTEGER},
      teacher_account = #{teacherAccount,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      exam_type = #{examType,jdbcType=VARCHAR},
      exam_type_code = #{examTypeCode,jdbcType=VARCHAR},
      academy_name = #{academyName,jdbcType=VARCHAR},
      academy_code = #{academyCode,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR},
      course_type_code = #{courseTypeCode,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>