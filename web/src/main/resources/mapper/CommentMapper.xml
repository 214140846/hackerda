<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hackerda.platform.infrastructure.database.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.hackerda.platform.infrastructure.database.model.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="post_id" jdbcType="BIGINT" property="postId" />
    <result column="post_user_name" jdbcType="VARCHAR" property="postUserName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="reply_comment_id" jdbcType="BIGINT" property="replyCommentId" />
    <result column="reply_user_name" jdbcType="VARCHAR" property="replyUserName" />
    <result column="root_comment_id" jdbcType="BIGINT" property="rootCommentId" />
    <result column="identity_code" jdbcType="INTEGER" property="identityCode" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="post_time" jdbcType="TIMESTAMP" property="postTime" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, post_id, post_user_name, user_name, content, like_count, reply_comment_id, reply_user_name, 
    root_comment_id, identity_code, record_status, post_time, gmt_create, gmt_modify
  </sql>
  <select id="selectByExample" parameterType="com.hackerda.platform.infrastructure.database.model.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hackerda.platform.infrastructure.database.model.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hackerda.platform.infrastructure.database.model.Comment" useGeneratedKeys="true">
    insert into comment (post_id, post_user_name, user_name, 
      content, like_count, reply_comment_id, 
      reply_user_name, root_comment_id, identity_code, 
      record_status, post_time, gmt_create, 
      gmt_modify)
    values (#{postId,jdbcType=BIGINT}, #{postUserName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{likeCount,jdbcType=INTEGER}, #{replyCommentId,jdbcType=BIGINT}, 
      #{replyUserName,jdbcType=VARCHAR}, #{rootCommentId,jdbcType=BIGINT}, #{identityCode,jdbcType=INTEGER}, 
      #{recordStatus,jdbcType=INTEGER}, #{postTime,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModify,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hackerda.platform.infrastructure.database.model.Comment" useGeneratedKeys="true">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        post_id,
      </if>
      <if test="postUserName != null">
        post_user_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="replyCommentId != null">
        reply_comment_id,
      </if>
      <if test="replyUserName != null">
        reply_user_name,
      </if>
      <if test="rootCommentId != null">
        root_comment_id,
      </if>
      <if test="identityCode != null">
        identity_code,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="postTime != null">
        post_time,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        #{postId,jdbcType=BIGINT},
      </if>
      <if test="postUserName != null">
        #{postUserName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="replyCommentId != null">
        #{replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="replyUserName != null">
        #{replyUserName,jdbcType=VARCHAR},
      </if>
      <if test="rootCommentId != null">
        #{rootCommentId,jdbcType=BIGINT},
      </if>
      <if test="identityCode != null">
        #{identityCode,jdbcType=INTEGER},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="postTime != null">
        #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hackerda.platform.infrastructure.database.model.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=BIGINT},
      </if>
      <if test="record.postUserName != null">
        post_user_name = #{record.postUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.replyCommentId != null">
        reply_comment_id = #{record.replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="record.replyUserName != null">
        reply_user_name = #{record.replyUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.rootCommentId != null">
        root_comment_id = #{record.rootCommentId,jdbcType=BIGINT},
      </if>
      <if test="record.identityCode != null">
        identity_code = #{record.identityCode,jdbcType=INTEGER},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=INTEGER},
      </if>
      <if test="record.postTime != null">
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=BIGINT},
      post_id = #{record.postId,jdbcType=BIGINT},
      post_user_name = #{record.postUserName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      reply_comment_id = #{record.replyCommentId,jdbcType=BIGINT},
      reply_user_name = #{record.replyUserName,jdbcType=VARCHAR},
      root_comment_id = #{record.rootCommentId,jdbcType=BIGINT},
      identity_code = #{record.identityCode,jdbcType=INTEGER},
      record_status = #{record.recordStatus,jdbcType=INTEGER},
      post_time = #{record.postTime,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hackerda.platform.infrastructure.database.model.Comment">
    update comment
    <set>
      <if test="postId != null">
        post_id = #{postId,jdbcType=BIGINT},
      </if>
      <if test="postUserName != null">
        post_user_name = #{postUserName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="replyCommentId != null">
        reply_comment_id = #{replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="replyUserName != null">
        reply_user_name = #{replyUserName,jdbcType=VARCHAR},
      </if>
      <if test="rootCommentId != null">
        root_comment_id = #{rootCommentId,jdbcType=BIGINT},
      </if>
      <if test="identityCode != null">
        identity_code = #{identityCode,jdbcType=INTEGER},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="postTime != null">
        post_time = #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hackerda.platform.infrastructure.database.model.Comment">
    update comment
    set post_id = #{postId,jdbcType=BIGINT},
      post_user_name = #{postUserName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      like_count = #{likeCount,jdbcType=INTEGER},
      reply_comment_id = #{replyCommentId,jdbcType=BIGINT},
      reply_user_name = #{replyUserName,jdbcType=VARCHAR},
      root_comment_id = #{rootCommentId,jdbcType=BIGINT},
      identity_code = #{identityCode,jdbcType=INTEGER},
      record_status = #{recordStatus,jdbcType=INTEGER},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>